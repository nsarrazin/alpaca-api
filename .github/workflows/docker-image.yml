name: Create and publish a Docker image

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - 'docker-compose.yml'
      - 'docker-compose.dev.yml'
      - '.github/ISSUE_TEMPLATE/*.yml'
      - '.github/dependabot.yml'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - 'docker-compose.yml'
      - 'docker-compose.dev.yml'
      - '.github/ISSUE_TEMPLATE/*.yml'
      - '.github/dependabot.yml'
  workflow_dispatch:
  release:
    types: [published, edited]

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest
    env:
      # Users allowed to build PR images should be added here and as contributors to the project
      IS_MAIN_BRANCH_PUSH: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      IS_RELEASE_EVENT: ${{ github.event_name == 'release' }}
      IS_ALLOWED_USER: ${{ (github.event_name == 'pull_request') && contains(fromJSON('["nsarrazin","gaby"]'), github.event.pull_request.user.login) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/nsarrazin/serge
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ env.IS_MAIN_BRANCH_PUSH || env.IS_RELEASE_EVENT || env.IS_ALLOWED_USER }}
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Publish Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ env.IS_MAIN_BRANCH_PUSH || env.IS_RELEASE_EVENT || env.IS_ALLOWED_USER }}
          target: release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
